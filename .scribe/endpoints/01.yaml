name: 'Patient Management'
description: |-

  APIs for managing patients
  please use key: "API_ACCESS_KEY"
  edit in .env file
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/patients
    metadata:
      groupName: 'Patient Management'
      groupDescription: |-

        APIs for managing patients
        please use key: "API_ACCESS_KEY"
        edit in .env file
      subgroup: ''
      subgroupDescription: ''
      title: 'List all patients'
      description: 'Get a list of all patients in the system.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
             {
               "id": 1,
               "name": "John Doe",
               "address": "123 Main St",
               "id_type": "identity_card",
               "id_no": "1234567890",
               "gender": "male",
               "dob": "1990-08-15",
               "medium_acquisition": "walk_in",
               "created_at": "2024-05-13T10:00:00.000000Z",
               "updated_at": "2024-05-13T10:00:00.000000Z"
             }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/patients
    metadata:
      groupName: 'Patient Management'
      groupDescription: |-

        APIs for managing patients
        please use key: "API_ACCESS_KEY"
        edit in .env file
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new patient'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Patient's full name"
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id_type:
        name: id_type
        description: 'Type of ID (identity_card, passport)'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id_no:
        name: id_no
        description: 'ID number'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: "Patient's gender (male/female)"
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      dob:
        name: dob
        description: 'Date of birth (YYYY-MM-DD)'
        required: true
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: "Patient's complete address"
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      medium_acquisition:
        name: medium_acquisition
        description: 'How patient was acquired (walk_in, referral)'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      id_type: consequatur
      id_no: consequatur
      gender: consequatur
      dob: consequatur
      address: consequatur
      medium_acquisition: consequatur
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "data": {
             "id": 1,
             "name": "John Doe",
             "address": "123 Main St",
             "id_type": "identity_card",
             "id_no": "1234567890",
             "gender": "male",
             "dob": "1990-08-15",
             "medium_acquisition": "walk_in",
             "created_at": "2024-05-13T10:00:00.000000Z",
             "updated_at": "2024-05-13T10:00:00.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "message": "The given data was invalid.",
           "errors": {
             "name": ["The name field is required."],
             "id_type": ["The id type field is required."]
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/patients/{id}'
    metadata:
      groupName: 'Patient Management'
      groupDescription: |-

        APIs for managing patients
        please use key: "API_ACCESS_KEY"
        edit in .env file
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific patient'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the patient'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "name": "John Doe",
             "address": "123 Main St",
             "id_type": "identity_card",
             "id_no": "1234567890",
             "gender": "male",
             "dob": "1990-08-15",
             "medium_acquisition": "walk_in",
             "created_at": "2024-05-13T10:00:00.000000Z",
             "updated_at": "2024-05-13T10:00:00.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/patients/{id}'
    metadata:
      groupName: 'Patient Management'
      groupDescription: |-

        APIs for managing patients
        please use key: "API_ACCESS_KEY"
        edit in .env file
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a patient'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the patient'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "Patient's full name"
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id_type:
        name: id_type
        description: 'Type of ID (identity_card, passport)'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id_no:
        name: id_no
        description: 'ID number'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      gender:
        name: gender
        description: "Patient's gender (male/female)"
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      dob:
        name: dob
        description: 'Date of birth (YYYY-MM-DD)'
        required: false
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: "Patient's complete address"
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      medium_acquisition:
        name: medium_acquisition
        description: 'How patient was acquired (walk_in, referral)'
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      id_type: consequatur
      id_no: consequatur
      gender: consequatur
      dob: consequatur
      address: consequatur
      medium_acquisition: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": {
             "id": 1,
             "name": "John Doe Updated",
             "address": "456 New St",
             "id_type": "identity_card",
             "id_no": "1234567890",
             "gender": "male",
             "dob": "1990-08-15",
             "medium_acquisition": "walk_in",
             "created_at": "2024-05-13T10:00:00.000000Z",
             "updated_at": "2024-05-13T10:00:00.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/patients/{id}'
    metadata:
      groupName: 'Patient Management'
      groupDescription: |-

        APIs for managing patients
        please use key: "API_ACCESS_KEY"
        edit in .env file
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a patient'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the patient'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Patient deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
